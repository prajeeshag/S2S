#!jinja2

{% set cpuPerNode=192 %}
{% set nio_groups=4 %}
{% set nio_tasks_per_group=16 %}
{% set nproc_x=64 %}
{% set nproc_y=56 %}

{% set cpuATM = nio_groups * nio_tasks_per_group + nproc_x * nproc_y  %}

{% set projectid = "k10189" %}

[scheduling]
    [[graph]]

[runtime]
    [[root]]
        init-script = """
            module swap PrgEnv-cray PrgEnv-intel/8.4.0
            module load craype-hugepages4M
            module load cray-netcdf
            # for wgrib, cdo, nco
            export PATH="${MY_SW}/micromamba/envs/operS2S/bin:$PATH"

        """
        platform=shaheennew
        [[[environment]]]
            WPS_DIR=${MY_SW}/S2S/WPS
            WRF_DIR=${MY_SW}/S2S/WRF
    
    [[install7z]]
        platform=shaheennew_login

    [[installCondaPkgs]]
        platform=shaheennew_login
        script = """
            export MAMBA_EXE="${MY_SW}/bin/micromamba"
            export MAMBA_ROOT_PREFIX="${MY_SW}/micromamba"
            echo "$MAMBA_EXE create -f $ETC_DIR/env.yaml -p $MY_SW/micromamba/envs/operS2S  -y"
            $MAMBA_EXE create -f $ETC_DIR/env.yaml -p $MY_SW/micromamba/envs/operS2S  -y
            echo "$MAMBA_EXE create -f ${CYLC_WORKFLOW_RUN_DIR}/etc/env.yaml -p $MY_SW/micromamba/envs/operS2S  -y"
        """

    [[installWrfWps]]
        platform=shaheennew_login
        script="""
	     mkdir -p $WRF_DIR

            if [ -e $WRF_DIR/main/real.exe ] && \
                [ -e $WRF_DIR/main/wrf.exe ] && \
                [ -e $WPS_DIR/ungrib/ungrib.exe ] && \
                [ -e $WPS_DIR/metgrid/metgrid.exe ]; then
                echo "Already compiled"
                exit 0
            fi

            rm -rf WRF
            git clone --branch release-v4.5.2 --depth 1 --single-branch  https://github.com/wrf-model/WRF.git 
            cd WRF
            export NETCDF=$NETCDF_DIR
            export NETCDF_classic=1
            ./configure <<< "50"
            sed -i 's/# -DRSL0_ONLY/-DRSL0_ONLY/g' ./configure.wrf
            sed -i 's/SCC             =       icc/SCC             =       cc/g' ./configure.wrf
            sed -i 's/CCOMP           =       icc/CCOMP           =       cc/g' ./configure.wrf
            sed -i 's/DM_CC           =       icc/DM_CC           =       cc/g' ./configure.wrf
            sed -i 's/nproc_x .LT. 10/nproc_x .LT. 1/' share/module_check_a_mundo.F
            sed -i 's/nproc_y .LT. 10/nproc_y .LT. 1/' share/module_check_a_mundo.F
            ./compile -j 8 em_real
            cd -
	    echo "   "            
	    echo "   "            
	    echo "   "            
	    echo "Starting WPS:"            
	    echo "   "            
	    echo "   "            
            rm -rf WPS
            git clone --branch release-v4.5 --depth 1 --single-branch  https://github.com/wrf-model/WPS.git 
            cd WPS
            ./configure <<< "38"
            sed -i '/SCC\s*=\s*cc/s/$/ -Wno-implicit-int/' configure.wps
            ./compile
            cd -

            cp -rL WRF/main WRF/test $WRF_DIR/
            cp -rL WPS/metgrid WPS/ungrib WPS/link_grib.csh $WPS_DIR/
            rm -rf *
        """

    [[METGRID]]
        [[[environment]]]
            run_cmd="srun"

    [[REAL]]
        execution time limit = PT3H
        [[[environment]]]
            run_cmd = "time srun -n {{ cpuPerNode }}"

        [[[directives]]]
            --account={{projectid}}
            --nodes = 1
            --ntasks = {{ cpuPerNode }}

    [[WRF]]
        execution time limit = PT5H
        [[[directives]]]
            --account={{projectid}}
            {% set nodes = (cpuATM + cpuPerNode - 1) // cpuPerNode %}
            --nodes={{ nodes }}
            --ntasks={{ cpuATM }}
        [[[environment]]]
            FI_CXI_RX_MATCH_MODE=hybrid
            run_cmd = "srun -n {{ cpuATM }} --distribution=block:block --hint=nomultithread"
            nio_groups={{ nio_groups }}
            nio_tasks_per_group={{ nio_tasks_per_group }}
            nproc_x={{ nproc_x }}
            nproc_y={{ nproc_y }}

    [[UNGRIB, METGRID, GET_FORCING, MERGE_TIME, CLEAN_UP]]
        execution time limit = PT3H
        [[[directives]]]
            --account={{projectid}}
            --ntasks = 1
            # --partition=shared
            --mem=8G

    [[viz<vizfld>, SUBMIT_BATCH]]
        execution time limit = PT3H
        [[[directives]]]
            --account={{projectid}}
            --nodes = 1
            --ntasks = {{cpuPerNode}}
        [[[environment]]]
            NTASKS={{cpuPerNode}}

    [[ACC2RATE, RH2, RAIN, create_meta_data, plot_viz_data<vizfld>]]
        platform=shaheennew_login

    [[push_data]]
        platform=shaheennew_login
        script = """
            echo "Push data to vizualization server"
            cd ${CYCLE_SHARE_DIR}/viz/
            rsync -r -P * kw61469:/home/pammirp/data/live/ncm/subseasonal
        """
